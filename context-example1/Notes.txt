
Tema auth language gibi bilgilerin tüm component lerde kullanilmasi gerekir. Bu nedele bu bilgiler global state ler de tutulmasi gereken veriler icin en iyi örneklerdir. 

Global state in dezavantajlari da vardir.    

avantaj:
- Global olarak paylasim yapmak              

dezavantaj:       
- component kullanimini azaltir yani react in dogal yapisini bozar.
- Component global state e bagimli hale gelir ve artik sadece bu is icin kullanilabilir. ama mesela parametre alan ve bu parametreye göre farkli farkli calisan bir func daha modülerdir.
- Mesela bir button component i olusturuyoruz. ve bunu propslar vasitasi ile bir yerde yesil olarak baska yerde mavi olarak cagiriyoruz. Ama global state kullandigimizda bu mümkün olmuyor cünkü global state demek tek bir yere bagli demek. tek bi sekilde calisir. Bu nedenle props kullanimi context e göre daha modülerdir. ve React in aslinda genel felsefesi budur. Bir kez kod yaz her yerde kullan. Dolayisi ile context, component in yeniden kullanilabilirligini azalttigi icin react in genel felsefesine ters

- diger ve daha önemli dezavantaj: global state dikkatli kullanilmazsa accessive rendering yapma tehlikesi meydana gelir. Global deki bir degisim ile, alttaki tüm component lar render edilir. Bu nedenle gereksiz kullanimda gereksiz bir rendering meydana gelir. 

component ler arasi props iletme islemine Props Drilling denir. 

dolmusta elden ele para gönderme.  Muavin ise context api 

Props drilling bir problemdir. Cözümü ise global state management 

Alternatif olarak router ile de veri gönderimi yapabiliriz. useParams useLocation

Context icine; degisken, object func yani hersey konulabilir. 

Context Api, native bir cözümdür. yani react in icinde vardir. Bu nedenle third party yükleme yapilmaz. ama redux bu sekilde degil yükleme gerekir. 

Redux daha eski. Context; redux dan esinlenerek yapilmis. 
Redux normal vanilie Js ile kullanilabilir. Js versiyonu ve react versiyonu vardir. 

Context kullanimi daha kolay. Ama büyük projelerde redux kullanimi zorunlu hale gelebiliyor. 


Redux in state yönetimi icin gömülü olarak tool lari var. icinde gömülü reducer lari var bu sekilde state leri azaltabiliyoruz. Tool lari vasitasi ile debug yapmak kolaylasiyor. Ama bunlari context de ayri ayri yapmamiz gerekiyor. 


Redux ve context in genel ismi "Global State Management(GSM) Methods"

GSM nedir ve bunun icin kullanilan paket lere örnek verir misiniz ?



Context Api kullanim Adimlari:

1: Create Context (createContext hook u kullanilir) 
2: Provider ile sarmalama (nerede kullanacak isek)  : Provider ile value icerisinde state yada func gönderebiliriz. Sarmalama icindeki tüm component ler bu verileri kullanabilir.
3: useContext (consume icin bu hook kullanilir)


*** Bir projede birden cok context olabilir. Ve context tüm app i sarmalamak zorunda degildir. sadece bir kac component i sarmalayan bir context de olabilir. 

