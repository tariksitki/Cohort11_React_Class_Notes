Redux:

Is Akisi:  

1: User dispatch vasitasi ile istegini gönderir. 
2: Dispatch icinde yazilan action bize bir object return eder. Bu object icine types dosyasindan ilgili type alinir ve bir de user tarafindan girilen bilgi payload olarak konulur. 
3: reducer, action tarafindan olusturulan object in type ini ve payload ini alir. Buna göre state i günceller. 

----------------------------------------------------------------

**** Birinci yöntem (store ve provider icin ayri bir klasör olusturmuyoruz, store ve provider app.js icinde yapiliyor)  is akis sirasi:

1: initial state ve reducer olusturma 
2: app.js de store olusturma, provider ile sarmalama 
3: kullanilacak yerlerde dispatch ve useSelector kullanma 

-- projemiz büyüdügünde bu sekilde kullanildiginda karisiklik olur. o nedenle diger klasörlü yapiyi kullaniyoruz. 

***  Bu yöntemde; state ler kullanildiklari yerde; dispatch icerisine manuel olarak type yazilir. Burada best practice olarak, bu stateleri degistirecek action lar yazilir ve dispatch ler icerisine bu action lar verilir. Bunlar zorunluluk degil sadece best practice. 
----------------------------------------------------------------

Bir global state management library dir. 

Third party and external bir library, react icinde bulunmaz.
kurulum gerekir dependency gerekir.
Özellikle complex state yönetiminin gerekli oldugu projelerde kullanilir.

redux gelistiricisi ayni zamanda react ekibinde de var
redux neredeyse react in official third party kütüphanesi gibi

global state management kütüphanesidir ************
redux sifirdan yazilmis degil. Flux ve Elm den esinlenilmistir.
Dan Abramov tarafindan gelistirildi.

eskiden redux kullanmak zorunlu gibiydi. simdi context alternatif olarak var 
react in ilk ciktigi zamanlarda baska global state management yoktu 
bu nedenle redux official gibi olmus 


redux;  daha güzel state yönetim ve debugging   tool lari vasitasi ile 

Redux olmadan react kullanilabilir mi (evet)

Redux ve content olmadan prop drilling kullanilir 

burada global saklama alanina context denmez store denir.
Global state management mantiginda; state ler global bir saklama alanina atilir ve ihtiyac oldugunda oradan cagrilarak kullanilir.

context createContext methodu ile olusturulurdu 

burada createStore 

context  =>  useContext
redux => useSelector hook u ile

context => Context.Provider
redux => Provider 

Adimlar: 

1: create 
2: sarmalama
3: istedigimiz yerlerde kullanma


redux da da herseyi global de kullanmak dogru degil 

global stateler düzgün kullanilmazsa performansi düsürebilir. Bu tüm global state ler icin gecerlidir sadece redux icin degil 

- Redux is official Redux UI Bindings for React 
- It implements Performance Optimizations for you 
- Uzun yillardan beri kullanildigi icin güzel bir Community Support var


Kurulum:

yarn add redux react-redux 





redux vanilla js de de kullanilabilir 
bu nedenle hem redux hem de react-redux in kurulumunu yapariz 



view : ui tarafi 



redux;  context ile reducer in birlesimi olarak görülebilir 


        ******** REDUX IS AKISI:


redux da state direkt degistirilmez; dispatch ile degistirilir. setState gibi 
ui tarafindan degistirme istegi dispatch ile gönderilir 

reducer bu istegi switch case yapisi ile inceler ve ona göre islem yapar 
ve degistirme islemini reducer yapar 


durum makinesi:  reducer a her zaman x verdigimizde y cikmasi lazim. 
reducer vasitasi ile girdi cikti ayni olmasi hep garanti edilmeye calisilir. 
yani state ler direkt degistirilemez. Her bir state degisimi icin;

dispatch - action - reducer - state    cycle   i izlenmek zorundadir. Bunun sebebi state lerin güvenli bir sekilde degistirilmesini garanti etmektir.



ui tarafi yani kullanici bir event handler ile istegini tetikler.
dispatch ile istek yapilir 
dispatch istegi alir ve bunu bir action formatina yani özel bir object formatina dönüstürür.
action lar bunu reducer a gönderir
reducer state i günceller 


programcilik temel mevzusu; func lar haline getir cagir kullan 


- reducer klasörü icinde sadece index.js yazdigimizda sadece .redux klasöründen import eder. sadece importu kisaltma saglar.

-- redux da store u bir cati olarak düsünebiliirz. Bu cati altinda kücük kücük state ler bulunur ve sonsuz sayida state bulunabilir. 

--- Redux da büyük oranda boiler plate kod bulunur. Bu nedenle her seferinde yazilmasi gereken bu kodlari otomatize etmek icin hazir hale getirmek icin redux toolkit cikarilmistir. 

-- Global state ile local state birlikte kullanilabilir. 